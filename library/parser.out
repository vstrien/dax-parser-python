Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    COLON
    EQUALS
    EVALUATE
    GREATERTHAN
    LBRACKET
    LESSTHAN
    MODULO
    RBRACKET
    SEMICOLON
    STRING

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS term
Rule 2     expression -> expression MINUS term
Rule 3     expression -> term
Rule 4     term -> term TIMES factor
Rule 5     term -> term DIVIDE factor
Rule 6     term -> factor
Rule 7     factor -> factor POWER primary
Rule 8     factor -> primary
Rule 9     primary -> NUMBER
Rule 10    primary -> IDENTIFIER
Rule 11    args -> LPAREN arglist RPAREN
Rule 12    arglist -> expression
Rule 13    arglist -> arglist COMMA expression
Rule 14    primary -> WHITESPACE

Terminals, with rules where they appear

AMPERSAND            : 
COLON                : 
COMMA                : 13
DIVIDE               : 5
EQUALS               : 
EVALUATE             : 
GREATERTHAN          : 
IDENTIFIER           : 10
LBRACKET             : 
LESSTHAN             : 
LPAREN               : 11
MINUS                : 2
MODULO               : 
NUMBER               : 9
PLUS                 : 1
POWER                : 7
RBRACKET             : 
RPAREN               : 11
SEMICOLON            : 
STRING               : 
TIMES                : 4
WHITESPACE           : 14
error                : 

Nonterminals, with rules where they appear

arglist              : 11 13
args                 : 
expression           : 1 2 12 13 0
factor               : 4 5 6 7
primary              : 7 8
term                 : 1 2 3 4 5

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS term
    (2) expression -> . expression MINUS term
    (3) expression -> . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . factor POWER primary
    (8) factor -> . primary
    (9) primary -> . NUMBER
    (10) primary -> . IDENTIFIER
    (14) primary -> . WHITESPACE

    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 6
    WHITESPACE      shift and go to state 7

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3
    primary                        shift and go to state 4

state 1

    (0) S' -> expression .
    (1) expression -> expression . PLUS term
    (2) expression -> expression . MINUS term

    PLUS            shift and go to state 8
    MINUS           shift and go to state 9


state 2

    (3) expression -> term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 3 (expression -> term .)
    MINUS           reduce using rule 3 (expression -> term .)
    $end            reduce using rule 3 (expression -> term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 3

    (6) term -> factor .
    (7) factor -> factor . POWER primary

    TIMES           reduce using rule 6 (term -> factor .)
    DIVIDE          reduce using rule 6 (term -> factor .)
    PLUS            reduce using rule 6 (term -> factor .)
    MINUS           reduce using rule 6 (term -> factor .)
    $end            reduce using rule 6 (term -> factor .)
    POWER           shift and go to state 12


state 4

    (8) factor -> primary .

    POWER           reduce using rule 8 (factor -> primary .)
    TIMES           reduce using rule 8 (factor -> primary .)
    DIVIDE          reduce using rule 8 (factor -> primary .)
    PLUS            reduce using rule 8 (factor -> primary .)
    MINUS           reduce using rule 8 (factor -> primary .)
    $end            reduce using rule 8 (factor -> primary .)


state 5

    (9) primary -> NUMBER .

    POWER           reduce using rule 9 (primary -> NUMBER .)
    TIMES           reduce using rule 9 (primary -> NUMBER .)
    DIVIDE          reduce using rule 9 (primary -> NUMBER .)
    PLUS            reduce using rule 9 (primary -> NUMBER .)
    MINUS           reduce using rule 9 (primary -> NUMBER .)
    $end            reduce using rule 9 (primary -> NUMBER .)


state 6

    (10) primary -> IDENTIFIER .

    POWER           reduce using rule 10 (primary -> IDENTIFIER .)
    TIMES           reduce using rule 10 (primary -> IDENTIFIER .)
    DIVIDE          reduce using rule 10 (primary -> IDENTIFIER .)
    PLUS            reduce using rule 10 (primary -> IDENTIFIER .)
    MINUS           reduce using rule 10 (primary -> IDENTIFIER .)
    $end            reduce using rule 10 (primary -> IDENTIFIER .)


state 7

    (14) primary -> WHITESPACE .

    POWER           reduce using rule 14 (primary -> WHITESPACE .)
    TIMES           reduce using rule 14 (primary -> WHITESPACE .)
    DIVIDE          reduce using rule 14 (primary -> WHITESPACE .)
    PLUS            reduce using rule 14 (primary -> WHITESPACE .)
    MINUS           reduce using rule 14 (primary -> WHITESPACE .)
    $end            reduce using rule 14 (primary -> WHITESPACE .)


state 8

    (1) expression -> expression PLUS . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . factor POWER primary
    (8) factor -> . primary
    (9) primary -> . NUMBER
    (10) primary -> . IDENTIFIER
    (14) primary -> . WHITESPACE

    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 6
    WHITESPACE      shift and go to state 7

    term                           shift and go to state 13
    factor                         shift and go to state 3
    primary                        shift and go to state 4

state 9

    (2) expression -> expression MINUS . term
    (4) term -> . term TIMES factor
    (5) term -> . term DIVIDE factor
    (6) term -> . factor
    (7) factor -> . factor POWER primary
    (8) factor -> . primary
    (9) primary -> . NUMBER
    (10) primary -> . IDENTIFIER
    (14) primary -> . WHITESPACE

    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 6
    WHITESPACE      shift and go to state 7

    term                           shift and go to state 14
    factor                         shift and go to state 3
    primary                        shift and go to state 4

state 10

    (4) term -> term TIMES . factor
    (7) factor -> . factor POWER primary
    (8) factor -> . primary
    (9) primary -> . NUMBER
    (10) primary -> . IDENTIFIER
    (14) primary -> . WHITESPACE

    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 6
    WHITESPACE      shift and go to state 7

    factor                         shift and go to state 15
    primary                        shift and go to state 4

state 11

    (5) term -> term DIVIDE . factor
    (7) factor -> . factor POWER primary
    (8) factor -> . primary
    (9) primary -> . NUMBER
    (10) primary -> . IDENTIFIER
    (14) primary -> . WHITESPACE

    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 6
    WHITESPACE      shift and go to state 7

    factor                         shift and go to state 16
    primary                        shift and go to state 4

state 12

    (7) factor -> factor POWER . primary
    (9) primary -> . NUMBER
    (10) primary -> . IDENTIFIER
    (14) primary -> . WHITESPACE

    NUMBER          shift and go to state 5
    IDENTIFIER      shift and go to state 6
    WHITESPACE      shift and go to state 7

    primary                        shift and go to state 17

state 13

    (1) expression -> expression PLUS term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 1 (expression -> expression PLUS term .)
    MINUS           reduce using rule 1 (expression -> expression PLUS term .)
    $end            reduce using rule 1 (expression -> expression PLUS term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 14

    (2) expression -> expression MINUS term .
    (4) term -> term . TIMES factor
    (5) term -> term . DIVIDE factor

    PLUS            reduce using rule 2 (expression -> expression MINUS term .)
    MINUS           reduce using rule 2 (expression -> expression MINUS term .)
    $end            reduce using rule 2 (expression -> expression MINUS term .)
    TIMES           shift and go to state 10
    DIVIDE          shift and go to state 11


state 15

    (4) term -> term TIMES factor .
    (7) factor -> factor . POWER primary

    TIMES           reduce using rule 4 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 4 (term -> term TIMES factor .)
    PLUS            reduce using rule 4 (term -> term TIMES factor .)
    MINUS           reduce using rule 4 (term -> term TIMES factor .)
    $end            reduce using rule 4 (term -> term TIMES factor .)
    POWER           shift and go to state 12


state 16

    (5) term -> term DIVIDE factor .
    (7) factor -> factor . POWER primary

    TIMES           reduce using rule 5 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 5 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 5 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 5 (term -> term DIVIDE factor .)
    $end            reduce using rule 5 (term -> term DIVIDE factor .)
    POWER           shift and go to state 12


state 17

    (7) factor -> factor POWER primary .

    POWER           reduce using rule 7 (factor -> factor POWER primary .)
    TIMES           reduce using rule 7 (factor -> factor POWER primary .)
    DIVIDE          reduce using rule 7 (factor -> factor POWER primary .)
    PLUS            reduce using rule 7 (factor -> factor POWER primary .)
    MINUS           reduce using rule 7 (factor -> factor POWER primary .)
    $end            reduce using rule 7 (factor -> factor POWER primary .)

